# Comments generated by chatgpt
# Import necessary libraries
import os
from astropy.io import fits
import pandas as pd
import numpy as np

# Get the current working directory and set it as the start path
startpath = os.getcwd() + "/"
os.chdir(startpath)

# List all directories in the current path to help user choose data directory
os.system("ls -d */")

# Prompt user to input the data directory name (relative to current path)
specpath = input("Enter data directory: ")
totpath = startpath + specpath  # Full path to data directory

# Change to the specified data directory
os.chdir(totpath)

# Define a list of UVOT filter names
filters = ["vv", "bb", "uu", "w1", "m2", "w2"]

# Get a list of all files in the current directory
filenames = os.listdir()

# Suffix used to identify relevant image files
fext = "_sk.img.gz"

for dirpath, dirnames, filenames in os.walk(totpath):
    os.chdir(dirpath)

    # Loop through each region file that starts with "src" and ends with ".reg"
    for srcname in [f for f in filenames if (f.startswith("src") and f.endswith(".reg"))]:
        try:
            # Try to extract the source index from filename like "src1.reg"
            src_i = int((srcname.replace("src", "")).replace(".reg", ""))
        except:
            try:
                # Try again with a slightly different format, e.g., "src_1.reg"
                src_i = int((srcname.replace("src_", "")).replace(".reg", ""))
            except:
                # If parsing fails, default to index 0
                src_i = 0

        # Loop through each defined filter
        for filter in filters:
            # Find all image files for the current filter
            for filename in [f for f in filenames if f.endswith(f"{filter}_sk.img.gz")]:
                # If a list file for this filter already exists
                if os.path.isfile(f"image_{filter}.lis"):
                    with open(f"image_{filter}.lis") as f:
                        # Check if this filename is already in the list
                        if filename in f.read():
                            pass  # Do nothing if already listed
                        else:
                            # If not in the list, append it
                            os.system(f"echo {filename} >> image_{filter}.lis")
                else:
                    # If list file doesn't exist, create it with the current filename
                    os.system(f"echo {filename} > image_{filter}.lis")

            # If the list file for this filter exists, run `uvotmaghist` tool
            
            if os.path.isfile(f"image_{filter}.lis"):
                if not os.path.isfile("bck.reg"):
                    raise ValueError(f"{os.getcwd()} is missing a bck.reg file.")
                
                os.system(f"uvotmaghist infile=@image_{filter}.lis \
                    srcreg={srcname} \
                    bkgreg=bck.reg \
                    outfile=lightcurve_{filter}_{src_i}.fits \
                    plotfile=lightcurve_{filter}_{src_i}.gif \
                    clobber=yes")
